@startuml
title Diagramme de classes pour les cases d'ouverture et de porte

interface Action {
    +onStepOn(Entite entite)
    +onAction(Entite entite, ZeldiabloJeu jeu)
}

abstract class Case {
        -x: int
        -y: int
    -isWalkable: boolean
    +setIsWalkable(boolean isWalkable)
    +getIsWalkable(): boolean
}

class CasePorte {
    -ouverte: boolean
    +ouvrir()
}

class CaseOuverture {
        -action: Runnable
        +CaseOuverture(int x, int y, Runnable action)
        +onStepOn(Entite entite)
}

class Labyrinthe {
        -gameBoard: Case[][]
        -casePorte: CasePorte
        -ouvrirPorte: Runnable
        +Labyrinthe(String nom, ZeldiabloJeu jeu)
        +getCase(int y, int x): Case
        +canEntityMoveTo(int i, int j): boolean
        +deplacerPerso(Direction action, Entite p)
}

Case ..|> Action
CasePorte --|> Case
CaseOuverture --|> Case
Labyrinthe --> CasePorte : Possède une porte
Labyrinthe --> CaseOuverture : Possède l'action d'ouverture
Labyrinthe "1" --> "*" Case : gameBoard

@enduml