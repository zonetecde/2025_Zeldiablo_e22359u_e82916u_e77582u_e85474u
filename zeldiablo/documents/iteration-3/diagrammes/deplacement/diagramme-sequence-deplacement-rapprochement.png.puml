@startuml
participant "dr: DeplacementRapprochement" as DR
participant "labyrinthe: Labyrinthe" as Laby
participant "player: Player" as Player
participant "monstre: Monstre" as Monstre
participant "Math" as Math

-> DR : deplacement(labyrinthe: Labyrinthe, monstre: Monstre)
activate DR

DR -> Laby : getPlayer()
activate Laby
Laby --> DR : Player
deactivate Laby

DR -> Player : getX()
activate Player
Player --> DR : int
deactivate Player

DR -> Player : getY()
activate Player
Player --> DR : int
deactivate Player

DR -> Monstre : getX()
activate Monstre
Monstre --> DR : int
deactivate Monstre

DR -> Monstre : getY()
activate Monstre
Monstre --> DR : int
deactivate Monstre

DR -> Math : abs(deltaX)
activate Math
Math --> DR : int
deactivate Math

DR -> Math : abs(deltaY)
activate Math
Math --> DR : int
deactivate Math

DR -> Laby : getSuivant(monstreY: int, monstreX: int, direction: Direction)
activate Laby
Laby --> DR : int[]
deactivate Laby

DR -> Laby : canEntityMoveTo(y: int, x: int)
activate Laby
Laby --> DR : boolean
deactivate Laby

alt [si canEntityMoveTo == true]
    DR -> Monstre : setPosition(y: int, x: int)
    activate Monstre
    deactivate Monstre
end

deactivate DR
@enduml